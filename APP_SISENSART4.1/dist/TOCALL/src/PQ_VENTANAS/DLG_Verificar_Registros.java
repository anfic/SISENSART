/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PQ_VENTANAS;

import PQ_CONTROLADORES.CLS_Controlador;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import org.apache.commons.net.ftp.FTP;
import org.apache.commons.net.ftp.FTPClient;

/**
 *
 * @author ANDY
 */
public class DLG_Verificar_Registros extends javax.swing.JDialog {

    CLS_Controlador ctrl = new CLS_Controlador();

    /**
     * Creates new form DLG_Verificar_Registros
     */
    public DLG_Verificar_Registros(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Limpiar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        CBseleccionar = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        TBpostulante = new javax.swing.JTable();
        TXbuscar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        CBvalidar = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        TXobservacion = new javax.swing.JTextField();
        BTverificar = new javax.swing.JButton();
        BTdescargar = new javax.swing.JButton();
        LBdirectorio = new javax.swing.JLabel();
        BTverificar1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        CBseleccionar1 = new javax.swing.JComboBox<>();
        TXbuscar1 = new javax.swing.JTextField();
        BTdescargar1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TBpostulanteValidado = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        CBcargos = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        CBseleccionar2 = new javax.swing.JComboBox<>();
        TXbuscar2 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        TBpostulanteInvalidado = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ventana de Verificación de Postulantes");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Datos de postulantes registrados.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Buscar:");

        CBseleccionar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DNI", "Nombres", "Apellidos" }));

        TBpostulante.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TBpostulante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "DNI", "Nombres", "Apellidos", "Teléfono", "Cargo", "N. Currículum", "Verificado", "F. registro"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TBpostulante);
        if (TBpostulante.getColumnModel().getColumnCount() > 0) {
            TBpostulante.getColumnModel().getColumn(2).setResizable(false);
            TBpostulante.getColumnModel().getColumn(4).setHeaderValue("Teléfono");
            TBpostulante.getColumnModel().getColumn(5).setHeaderValue("Cargo");
            TBpostulante.getColumnModel().getColumn(6).setHeaderValue("N. Currículum");
            TBpostulante.getColumnModel().getColumn(7).setHeaderValue("Verificado");
        }

        TXbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXbuscarKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Seleccione el estado del postulante:");

        CBvalidar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "VALIDADO", "INVALIDADO" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Registre alguna observación:");

        BTverificar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        BTverificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PQ_IMAGENES/Aceptar.png"))); // NOI18N
        BTverificar.setText("Verificar");
        BTverificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTverificarActionPerformed(evt);
            }
        });

        BTdescargar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BTdescargar.setText("Descargar CV");
        BTdescargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTdescargarActionPerformed(evt);
            }
        });

        LBdirectorio.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        BTverificar1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        BTverificar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PQ_IMAGENES/ACTUALIZAR.png"))); // NOI18N
        BTverificar1.setText("Limpiar");
        BTverificar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTverificar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CBseleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TXbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BTdescargar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(CBvalidar, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(TXobservacion)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(LBdirectorio, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BTverificar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BTverificar)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(CBseleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TXbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTdescargar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CBvalidar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(TXobservacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(LBdirectorio, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTverificar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTverificar1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Postulantes No Verificados", jPanel2);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Lista de Postulantes Validados.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Buscar:");

        CBseleccionar1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DNI", "Nombres", "Apellidos" }));

        TXbuscar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXbuscar1KeyTyped(evt);
            }
        });

        BTdescargar1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BTdescargar1.setText("Descargar CV");
        BTdescargar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTdescargar1ActionPerformed(evt);
            }
        });

        TBpostulanteValidado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TBpostulanteValidado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "DNI", "Nombres", "Apellidos", "Teléfono", "Cargo", "N. Currículum", "Verificado", "F. registro"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TBpostulanteValidado);
        if (TBpostulanteValidado.getColumnModel().getColumnCount() > 0) {
            TBpostulanteValidado.getColumnModel().getColumn(2).setResizable(false);
            TBpostulanteValidado.getColumnModel().getColumn(4).setHeaderValue("Teléfono");
            TBpostulanteValidado.getColumnModel().getColumn(5).setHeaderValue("Cargo");
            TBpostulanteValidado.getColumnModel().getColumn(6).setHeaderValue("N. Currículum");
            TBpostulanteValidado.getColumnModel().getColumn(7).setHeaderValue("Verificado");
        }

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Filtar por Cargos:");

        CBcargos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CBcargosFocusGained(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Filtrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CBseleccionar1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TXbuscar1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CBcargos, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BTdescargar1)
                .addContainerGap())
            .addComponent(jScrollPane3)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(CBseleccionar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TXbuscar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTdescargar1)
                    .addComponent(jLabel5)
                    .addComponent(CBcargos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Postulantes Validados", jPanel3);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Lista de Postulantes Validados.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Buscar:");

        CBseleccionar2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DNI", "Nombres", "Apellidos" }));

        TXbuscar2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXbuscar2KeyTyped(evt);
            }
        });

        TBpostulanteInvalidado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TBpostulanteInvalidado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "DNI", "Nombres", "Apellidos", "F. registro", "Observación"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(TBpostulanteInvalidado);
        if (TBpostulanteInvalidado.getColumnModel().getColumnCount() > 0) {
            TBpostulanteInvalidado.getColumnModel().getColumn(2).setResizable(false);
            TBpostulanteInvalidado.getColumnModel().getColumn(5).setPreferredWidth(350);
        }

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("Eliminar Registro");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CBseleccionar2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TXbuscar2, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1098, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel6)
                        .addComponent(CBseleccionar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TXbuscar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Postulantes Invalidados", jPanel5);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TXbuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXbuscarKeyTyped
        // TODO add your handling code here:
        if (CBseleccionar.getSelectedIndex() == 0) {
            ctrl.BuscarJtable(TXbuscar, TBpostulante, 1);
        } else if (CBseleccionar.getSelectedIndex() == 1) {
            ctrl.BuscarJtable(TXbuscar, TBpostulante, 2);
        } else if (CBseleccionar.getSelectedIndex() == 2) {
            ctrl.BuscarJtable(TXbuscar, TBpostulante, 3);
        }
    }//GEN-LAST:event_TXbuscarKeyTyped

    private void BTdescargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTdescargarActionPerformed
        File folder = new File("C:/PersonalPostulante-RRHH/CV");
        if (!folder.exists()) {
            folder.mkdirs();
            ctrl.mensaje.MensajeAlerta("El directorio fue creado exitosamente.");
            if (TBpostulante.getRowCount() == 0) {
                ctrl.mensaje.MensajeAlerta("La tabla no contiene elementos.");
            } else if (TBpostulante.getSelectedRow() == -1) {
                ctrl.mensaje.MensajeAlerta("Ud. no seleccionó ninguna fila.");
            } else if (TBpostulante.getSelectedRowCount() > 1) {
                ctrl.mensaje.MensajeAlerta("Seleccione solo una fila.");
            } else {
                String server = "www.constructoramls.com";
//        int port = 21;
                String user = "construc";
                String pass = "CI7asEcDL0";

                FTPClient ftpClient = new FTPClient();
                try {

                    ftpClient.connect(server);
                    ftpClient.login(user, pass);
                    ftpClient.enterLocalPassiveMode();
                    ftpClient.setFileType(FTP.BINARY_FILE_TYPE);

                    // APPROACH #1: using retrieveFile(String, OutputStream)
                    String remoteFile1 = "/oportunidadlaboral.constructoramls.com/PDF/" + ctrl.ValorTabla(TBpostulante, 6);
                    File downloadFile1 = new File("C:\\PersonalPostulante-RRHH\\CV\\" + ctrl.ValorTabla(TBpostulante, 6));
                    OutputStream outputStream1 = new BufferedOutputStream(new FileOutputStream(downloadFile1));
                    boolean success = ftpClient.retrieveFile(remoteFile1, outputStream1);
                    outputStream1.close();

                    if (success) {
                        ctrl.mensaje.MensajeAlerta("Se descargó el CV del personal " + ctrl.ValorTabla(TBpostulante, 2) + " " + ctrl.ValorTabla(TBpostulante, 3) + " exitosamente.");
                    }
                } catch (IOException ex) {
                    System.out.println("Error: " + ex.getMessage());
                    ctrl.mensaje.MensajeAlerta("Error:\n" + ex.getMessage());
                    ex.printStackTrace();
                } finally {
                    try {
                        if (ftpClient.isConnected()) {
                            ftpClient.logout();
                            ftpClient.disconnect();
                        }
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                }
            }
        } else {
            if (TBpostulante.getRowCount() == 0) {
                ctrl.mensaje.MensajeAlerta("La tabla no contiene elementos.");
            } else if (TBpostulante.getSelectedRow() == -1) {
                ctrl.mensaje.MensajeAlerta("Ud. no seleccionó ninguna fila.");
            } else if (TBpostulante.getSelectedRowCount() > 1) {
                ctrl.mensaje.MensajeAlerta("Seleccione solo una fila.");
            } else {
                String server = "www.constructoramls.com";
//        int port = 21;
                String user = "construc";
                String pass = "CI7asEcDL0";

                FTPClient ftpClient = new FTPClient();
                try {

                    ftpClient.connect(server);
                    ftpClient.login(user, pass);
                    ftpClient.enterLocalPassiveMode();
                    ftpClient.setFileType(FTP.BINARY_FILE_TYPE);

                    // APPROACH #1: using retrieveFile(String, OutputStream)
                    String remoteFile1 = "/oportunidadlaboral.constructoramls.com/PDF/" + ctrl.ValorTabla(TBpostulante, 6);
                    File downloadFile1 = new File("C:\\PersonalPostulante-RRHH\\CV\\" + ctrl.ValorTabla(TBpostulante, 6));
                    OutputStream outputStream1 = new BufferedOutputStream(new FileOutputStream(downloadFile1));
                    boolean success = ftpClient.retrieveFile(remoteFile1, outputStream1);
                    outputStream1.close();

                    if (success) {
                        ctrl.mensaje.MensajeAlerta("Se descargó el CV del Sr./a. " + ctrl.ValorTabla(TBpostulante, 2) + " " + ctrl.ValorTabla(TBpostulante, 3) + " exitosamente.");
                    }
                } catch (IOException ex) {
                    System.out.println("Error: " + ex.getMessage());
                    ctrl.mensaje.MensajeAlerta("Error:\n" + ex.getMessage());
                    ex.printStackTrace();
                } finally {
                    try {
                        if (ftpClient.isConnected()) {
                            ftpClient.logout();
                            ftpClient.disconnect();
                        }
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                }
            }
            LBdirectorio.setText(String.valueOf(folder));
        }
    }//GEN-LAST:event_BTdescargarActionPerformed

    private void BTverificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTverificarActionPerformed
        // TODO add your handling code here:
        Verificar();
    }//GEN-LAST:event_BTverificarActionPerformed

    private void BTverificar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTverificar1ActionPerformed
        // TODO add your handling code here:
        Limpiar();
    }//GEN-LAST:event_BTverificar1ActionPerformed

    private void TXbuscar1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXbuscar1KeyTyped
        // TODO add your handling code here:
        if (CBseleccionar1.getSelectedIndex() == 0) {
            ctrl.BuscarJtable(TXbuscar1, TBpostulanteValidado, 1);
        } else if (CBseleccionar1.getSelectedIndex() == 1) {
            ctrl.BuscarJtable(TXbuscar1, TBpostulanteValidado, 2);
        } else if (CBseleccionar1.getSelectedIndex() == 2) {
            ctrl.BuscarJtable(TXbuscar1, TBpostulanteValidado, 3);
        }
    }//GEN-LAST:event_TXbuscar1KeyTyped

    private void BTdescargar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTdescargar1ActionPerformed
        // TODO add your handling code here:
        File folder = new File("C:/PersonalPostulante-RRHH/CV");
        if (!folder.exists()) {
            folder.mkdirs();
            ctrl.mensaje.MensajeAlerta("El directorio fue creado exitosamente.");
            if (TBpostulanteValidado.getRowCount() == 0) {
                ctrl.mensaje.MensajeAlerta("La tabla no contiene elementos.");
            } else if (TBpostulanteValidado.getSelectedRow() == -1) {
                ctrl.mensaje.MensajeAlerta("Ud. no seleccionó ninguna fila.");
            } else if (TBpostulanteValidado.getSelectedRowCount() > 1) {
                ctrl.mensaje.MensajeAlerta("Seleccione solo una fila.");
            } else {
                String server = "www.constructoramls.com";
//        int port = 21;
                String user = "construc";
                String pass = "c0nsTruct0r4";

                FTPClient ftpClient = new FTPClient();
                try {

                    ftpClient.connect(server);
                    ftpClient.login(user, pass);
                    ftpClient.enterLocalPassiveMode();
                    ftpClient.setFileType(FTP.BINARY_FILE_TYPE);

                    // APPROACH #1: using retrieveFile(String, OutputStream)
                    String remoteFile1 = "/oportunidadlaboral.constructoramls.com/PDF/" + ctrl.ValorTabla(TBpostulanteValidado, 6);
                    File downloadFile1 = new File("C:\\PersonalPostulante-RRHH\\CV\\" + ctrl.ValorTabla(TBpostulanteValidado, 6));
                    OutputStream outputStream1 = new BufferedOutputStream(new FileOutputStream(downloadFile1));
                    boolean success = ftpClient.retrieveFile(remoteFile1, outputStream1);
                    outputStream1.close();

                    if (success) {
                        ctrl.mensaje.MensajeAlerta("Se descargó el CV del personal " + ctrl.ValorTabla(TBpostulanteValidado, 2) + " " + ctrl.ValorTabla(TBpostulanteValidado, 3) + " exitosamente.");
                    }
                } catch (IOException ex) {
                    System.out.println("Error: " + ex.getMessage());
                    ctrl.mensaje.MensajeAlerta("Error:\n" + ex.getMessage());
                    ex.printStackTrace();
                } finally {
                    try {
                        if (ftpClient.isConnected()) {
                            ftpClient.logout();
                            ftpClient.disconnect();
                        }
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                }
            }
        } else {
            if (TBpostulanteValidado.getRowCount() == 0) {
                ctrl.mensaje.MensajeAlerta("La tabla no contiene elementos.");
            } else if (TBpostulanteValidado.getSelectedRow() == -1) {
                ctrl.mensaje.MensajeAlerta("Ud. no seleccionó ninguna fila.");
            } else if (TBpostulanteValidado.getSelectedRowCount() > 1) {
                ctrl.mensaje.MensajeAlerta("Seleccione solo una fila.");
            } else {
                String server = "www.constructoramls.com";
//        int port = 21;
                String user = "construc";
                String pass = "c0nsTruct0r4";

                FTPClient ftpClient = new FTPClient();
                try {

                    ftpClient.connect(server);
                    ftpClient.login(user, pass);
                    ftpClient.enterLocalPassiveMode();
                    ftpClient.setFileType(FTP.BINARY_FILE_TYPE);

                    // APPROACH #1: using retrieveFile(String, OutputStream)
                    String remoteFile1 = "/oportunidadlaboral.constructoramls.com/PDF/" + ctrl.ValorTabla(TBpostulanteValidado, 6);
                    File downloadFile1 = new File("C:\\PersonalPostulante-RRHH\\CV\\" + ctrl.ValorTabla(TBpostulanteValidado, 6));
                    OutputStream outputStream1 = new BufferedOutputStream(new FileOutputStream(downloadFile1));
                    boolean success = ftpClient.retrieveFile(remoteFile1, outputStream1);
                    outputStream1.close();

                    if (success) {
                        ctrl.mensaje.MensajeAlerta("Se descargó el CV del Sr./a. " + ctrl.ValorTabla(TBpostulanteValidado, 2) + " " + ctrl.ValorTabla(TBpostulanteValidado, 3) + " exitosamente.");
                    }
                } catch (IOException ex) {
                    System.out.println("Error: " + ex.getMessage());
                    ctrl.mensaje.MensajeAlerta("Error:\n" + ex.getMessage());
                    ex.printStackTrace();
                } finally {
                    try {
                        if (ftpClient.isConnected()) {
                            ftpClient.logout();
                            ftpClient.disconnect();
                        }
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                }
            }
            LBdirectorio.setText(String.valueOf(folder));
        }
    }//GEN-LAST:event_BTdescargar1ActionPerformed

    private void CBcargosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CBcargosFocusGained
        // TODO add your handling code here:
        ctrl.LlenarCombo(CBcargos,"select * from cargo where tipo='B' order by descripcion", 2);
    }//GEN-LAST:event_CBcargosFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Limpiar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(CBcargos.getSelectedIndex()==-1)
        {
            ctrl.mensaje.MensajeAlerta("Ud. no seleccionó ningún cargo");
        }
        else{
            ctrl.VisualizarDataEscogidaEnTabla("id_postulante,DNI,nombres,apellidos,telefono,cargo,direccion_cv,verificado,fecha_registro", "postulante", TBpostulanteValidado, "WHERE cargo='"+CBcargos.getSelectedItem().toString().trim()+"' and estado_registro='VALIDADO'");
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void TXbuscar2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXbuscar2KeyTyped
        // TODO add your handling code here
        if (CBseleccionar2.getSelectedIndex() == 0) {
            ctrl.BuscarJtable(TXbuscar2, TBpostulanteInvalidado, 1);
        } else if (CBseleccionar2.getSelectedIndex() == 1) {
            ctrl.BuscarJtable(TXbuscar2, TBpostulanteInvalidado, 2);
        } else if (CBseleccionar2.getSelectedIndex() == 2) {
            ctrl.BuscarJtable(TXbuscar2, TBpostulanteInvalidado, 3);
        }
    }//GEN-LAST:event_TXbuscar2KeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Eliminar();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DLG_Verificar_Registros.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DLG_Verificar_Registros.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DLG_Verificar_Registros.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DLG_Verificar_Registros.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DLG_Verificar_Registros dialog = new DLG_Verificar_Registros(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTdescargar;
    private javax.swing.JButton BTdescargar1;
    private javax.swing.JButton BTverificar;
    private javax.swing.JButton BTverificar1;
    private javax.swing.JComboBox<String> CBcargos;
    private javax.swing.JComboBox<String> CBseleccionar;
    private javax.swing.JComboBox<String> CBseleccionar1;
    private javax.swing.JComboBox<String> CBseleccionar2;
    private javax.swing.JComboBox<String> CBvalidar;
    private javax.swing.JLabel LBdirectorio;
    private javax.swing.JTable TBpostulante;
    private javax.swing.JTable TBpostulanteInvalidado;
    private javax.swing.JTable TBpostulanteValidado;
    private javax.swing.JTextField TXbuscar;
    private javax.swing.JTextField TXbuscar1;
    private javax.swing.JTextField TXbuscar2;
    private javax.swing.JTextField TXobservacion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    private void Verificar() {
        if (TBpostulante.getRowCount() == 0) {
            ctrl.mensaje.MensajeAlerta("La tabla no contiene elementos.");
        } else if (TBpostulante.getSelectedRow() == -1) {
            ctrl.mensaje.MensajeAlerta("Ud. no seleccionó ninguna fila.");
        } else if (TBpostulante.getSelectedRowCount() > 1) {
            ctrl.mensaje.MensajeAlerta("Seleccione solo una fila.");
        } else if (TXobservacion.getText().trim().length() == 0) {
            ctrl.mensaje.MensajeAlerta("Escriba alguna observación.");
        } else {
            ctrl.ActualizarData("postulante", "verificado='SI',estado_registro='" + CBvalidar.getSelectedItem().toString().trim() + "',observacion='" + TXobservacion.getText().trim() + "'", "id_postulante='" + ctrl.ValorTabla(TBpostulante, 0) + "'");
            Limpiar();
        }
    }

    private void Limpiar() {
        ctrl.LlenarCombo(CBcargos,"select * from cargo where tipo='B' order by descripcion", 2);
        ctrl.VisualizarDataEscogidaEnTabla("id_postulante,DNI,nombres,apellidos,telefono,cargo,direccion_cv,verificado,fecha_registro", "postulante", TBpostulante, "WHERE verificado='NO'");
        ctrl.VisualizarDataEscogidaEnTabla("id_postulante,DNI,nombres,apellidos,telefono,cargo,direccion_cv,verificado,fecha_registro", "postulante", TBpostulanteValidado, "WHERE estado_registro='VALIDADO'");
        ctrl.VisualizarDataEscogidaEnTabla("id_postulante,DNI,nombres,apellidos,fecha_registro,observacion", "postulante", TBpostulanteInvalidado, "WHERE estado_registro='INVALIDADO'");
        CBseleccionar.setSelectedIndex(0);
        TXbuscar.setText("");
        TXbuscar1.setText("");
        CBvalidar.setSelectedIndex(0);
        TXobservacion.setText("");
        CBseleccionar1.setSelectedIndex(0);
        CBcargos.setSelectedIndex(-1);
        CBseleccionar2.setSelectedIndex(0);
    }

    private void Eliminar() {
        if (TBpostulanteInvalidado.getRowCount() == 0) {
                ctrl.mensaje.MensajeAlerta("La tabla no contiene elementos.");
            } else if (TBpostulanteInvalidado.getSelectedRow() == -1) {
                ctrl.mensaje.MensajeAlerta("Ud. no seleccionó ninguna fila.");
            } else if (TBpostulanteInvalidado.getSelectedRowCount() > 1) {
                ctrl.mensaje.MensajeAlerta("Seleccione solo una fila.");
            } else {
                ctrl.EliminarData("postulante","where id_postulante='"+ctrl.ValorTabla(TBpostulanteInvalidado, 0)+"'");
                Limpiar();
            }
    }
}
